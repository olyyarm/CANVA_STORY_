,,1. Основная архитектура и окружение,,,,,,
,,,,,,,,
Column 9,Column 8,ID,Задача,Описание,Зависимости,Приоритет,Шаги реализации,Примечания
FALSE,0,A-1,Выбрать стек (Frontend + Backend),"Принять решение о технологиях: (React/Angular/Vue, Node/Python/Go), фреймворках, менеджерах состояния",Нет,Высокий,"1) Анализ требований;
2) Сравнение фреймворков и библиотек;
3) Финальный выбор и настройка репозитория",Можно использовать TypeScript + Node
FALSE,0,A-2,Настроить окружение разработки,"Структура проекта, линтер, форматтер, базовый CI, тестовая сборка",A-1,Высокий,"1) Инициализировать Git-репозиторий;
2) Настроить CI (GitHub Actions / GitLab CI);
3) Установить линтеры, Husky, Prettier и т.д.",
FALSE,0,A-3,Создать MVP-сервер (API),Базовый сервер с REST-эндпоинтами (FastAPI/Express),"A-1, A-2",Высокий,"1) Создать структуру каталогов;
2) Подключить нужные библ. (Flask/FastAPI или Express);
3) Тестовый эндпоинт «/healthcheck»",
FALSE,0,A-4,Подключить базу (или JSON-файлы),"Для хранения конфигураций, списка проектов, сцен, настроек","A-1, A-2",Средний,"1) Выбор решения (SQLite, Postgres, JSON);
2) Миграции/схема;
3) Интерфейсы для чтения/записи",Возможен вариант без БД (JSON)
FALSE,0,A-5,Развернуть тестовое окружение,"Среда для прогона интеграционных тестов, моков и UI-скриншотов","A-1, A-2",Средний,"1) Подготовить docker-compose или локальный setup;
2) Настроить автоматический запуск тестов",
,,,,,,,,
,,,,,,,,
,,2. Frontend: канва и таймлиния,,,,,,
,,,,,,,,
Column 9,Column 8,ID,Задача,Описание,Зависимости,Приоритет,Шаги реализации,Примечания
FALSE,0,F-1,Базовый интерфейс (SPA),"Создать каркас приложения (Router, Layout, Header/Footer)","A-1, A-2",Высокий,"1) Инициализировать SPA (Create React App / Vite / Nuxt);
2) Добавить шапку с логотипом;
3) Подготовить контейнеры для холста и боковой панели",
FALSE,0,F-2,Отобразить центральный блок (initial node),"Отдельный блок, куда вставляется исходный текст/запрос",F-1,Высокий,"1) Создать компонент «InitialNode»;
2) Реализовать вставку текста, кнопку «Генерировать»;
3) Связать с API (при нажатии отправляется POST /split_scenario)",
FALSE,0,F-3,Реализовать канву (Canvas),"Использовать библиотеку (Konva, D3, GoJS или аналоги) для отрисовки связанного графа (центральный блок + узлы сцен)","F-1, F-2",Высокий,"1) Подключить библиотеку (например, Konva.js);
2) Создать базовый слой (stage, layer);
3) Прорисовать узлы и линии;
4) Добавить события drag-and-drop",
FALSE,0,F-4,Упорядочивание и перетаскивание узлов,Поддержка ручного изменения положения сцен; линии связываются автоматически,F-3,Средний,"1) Включить drag-and-drop для узлов;
2) Следить за позициями в состоянии (Redux/Zustand);
3) Перерисовывать связи при перемещении",
FALSE,0,F-5,Таймлиния внизу,Горизонтальная полоса времени + метки сцен; синхронизация с канвой (при выборе сцены подсвечивается узел),F-3,Средний,"1) Создать компонент Timeline;
2) Отображать «сегменты» сцен на шкале;
3) При наведении (hover) подсветка сцены на канве и наоборот;
4) Реализовать drag для изменения длительности","Могут быть проблемы при большом числе сцен, нужны механизмы зума или прокрутки"
FALSE,0,F-6,Боковая панель редактирования,"Панель (выезжающая справа), где редактируются названия, описания, таймкоды, стиль сцены","F-3, F-5",Высокий,"1) Создать «SceneEditor» компонент;
2) Подвязать к событию «клик по узлу»;
3) Разместить поля: Заголовок, Стиль, Описание, кнопки («Сохранить», «Перегенерировать»)",
FALSE,0,F-7,Управление zoom/pan,Кнопки «+» и «-» в углу канвы + режим «рука» для панорамирования,F-3,Средний,"1) Реализовать методы масштабирования Konva (stage.scaleX/Y);
2) Подключить события колеса мыши / нажатия кнопок;
3) Включить «драг-холст» с зажатой клавишей",
FALSE,0,F-8,"Подсказки/инструкции (tooltips, onboarding)","Короткие всплывающие подсказки при наведении на кнопки («Regenerate Scene», «Add Node» и т.д.)","F-3, F-6",Низкий,"1) Добавить библиотеку для всплывающих подсказок (Tippy.js и пр.);
2) Небольшой гайд-тур при первом входе (react-joyride)","Можно добавить позже, чтобы не усложнять MVP"
FALSE,0,F-9,"Режим ""минимум""","Скрытие части UI (например, таймлинии и боковой панели), оставляя лишь канву",F-6,Низкий,"1) Кнопка «Minimize UI»;
2) Устанавливать флаг в состоянии, скрывать/показывать элементы",Удобно для проектов с большим числом узлов
FALSE,0,F-10,Поиск и фильтры,"Строка поиска по названиям сцен, фильтр по тегам (например «Диалоги», «Экшн»)","F-3, F-6",Средний,"1) Ввести поле «tags» у сцен;
2) Реализовать поиск (fuse.js / встроенный);
3) Подсвечивать на канве только подходящие узлы",
,,,,,,,,
,,3. Функционал LLM и работа с текстом,,,,,,
,,,,,,,,
Column 9,Column 8,ID,Задача,Описание,Зависимости,Приоритет,Шаги реализации,Примечания
FALSE,0,L-1,Разбиение текста на сцены (/split_scenario),"Отправка длинного текста ЛЛМ, получение структуры: список сцен (title, timecodes, описание)",A-3,Высокий,"1) Написать эндпоинт на бэке «POST /split_scenario»;
2) Вызов LLM с промптом (правила разбивки, лимит токенов);
3) Возврат JSON массива сцен",Нужно учитывать механизм чанков (sliding window)
FALSE,0,L-2,Корректировка сцены (/refine_scene),"Пользователь правит сцену или пишет комментарий, бэк отправляет апдейт ЛЛМ","A-3, L-1",Высокий,"1) Написать эндпоинт «POST /refine_scene»;
2) Сообщать ЛЛМ новое правило (напр. «Без крупного плана до конца»);
3) Возвращать обновлённую (или ту же) структуру","Выборочно обновляем сцены, учитывая контекст"
FALSE,0,L-3,Промптивизация (формирование prompts),Конвертация зафиксированного сценария в детализированные prompts для генеративных моделей,"A-3, L-1, L-2",Высокий,"1) Эндпоинт «POST /prompts_generate»;
2) Учёт библиотеки персонажей/локаций;
3) Подготовка финального текста (стиль, композиция, lighting, etc.)",
FALSE,0,L-4,Обработка больших текстов,"Механизм чанкинга >10k токенов (sliding window, синтез результатов)",L-1,Средний,"1) Определить максимально доступный контекст;
2) Разбивать текст на куски, передав их LLM;
3) Объединять результаты в общую структуру",Может потребоваться продуманный алгоритм «smart chunking»
FALSE,0,L-5,Автосохранение с учётом LLM,"При больших паузах или при изменениях — сохранить черновик, чтобы не вызывать повторную генерацию","L-1, L-2",Средний,"1) Локальный кэш результатов (IndexedDB или база);
2) Проверять, не менялся ли исходный текст;",Экономит токены и время работы LLM
FALSE,0,L-6,Настройка стиля (глобальные настройки),"Можно задать «реалистичный», «фэнтези», «научпоп» и т.д. Глобальные параметры влияют на все генерации","L-1, L-2",Средний,"1) UI для выбора стиля;
2) Прокидывать стиль в промпт для /split_scenario и /refine_scene;
3) Хранить текущее значение стиля в глобальном состоянии",
FALSE,0,L-7,Проверка консистентности персонажей,"Если персонаж меняет внешность в разных сценах, система предлагает исправить",L-3,Низкий,"1) При промптивизации сопоставлять атрибуты персонажа;
2) Если противоречие — выдавать предупреждение: «В сцене Х указан другой цвет волос»","Механика может быть сложной, требует корректного алгоритма"
,,,,,,,,
,,4. Библиотека персонажей и окружений,,,,,,
,,,,,,,,
Column 9,Column 8,ID,Задача,Описание,Зависимости,Приоритет,Шаги реализации,Примечания
FALSE,0,B-1,Создать структуру Character & Setting Bible,"Файл JSON / таблица в БД, где хранится описание персонажей, локаций, реквизита","A-4, L-3",Средний,"1) Спроектировать схему (name, appearance, traits, etc.);
2) CRUD-эндпоинты (/characters, /locations);
3) UI для просмотра/редактирования",Можно хранить в JSON или rеляционной БД
FALSE,0,B-2,Форма добавления/редактирования персонажа,"UI, позволяющий быстро создать персонажа: «Имя», «Возраст», «Внешность»",B-1,Средний,"1) Компонент «CharacterEditor»;
2) Поля + валидация;
3) Сохранение и обновление в базе",
FALSE,0,B-3,Автодополнение на основе ключевых слов,"При вводе «седой учёный» LLM может предложить «очки, белый халат, +40 лет»","L-2, B-2",Низкий,"1) При вводе текста вызывать LLM (prompt: «дополни детали»);
2) Пользователь выбирает, что применить","Доп. функционал, можно реализовать в более поздней фазе"
FALSE,0,B-4,Шаблоны персонажей/локаций,"Предустановленные примеры (детектив, учёный, дворец, замок и т.п.)",B-1,Низкий,"1) Коллекция JSON с часто используемыми архетипами;
2) Возможность выбрать «Добавить шаблон»",Ускоряет создание новых проектов
FALSE,0,B-5,Синхронизация с промптивизацией,"При генерации сцены система подставляет соответствующие данные персонажей (цвет волос, одежда)","B-1, L-3",Высокий,"1) /prompts_generate подтягивает info из БД;
2) Собирает финальный текст prompt",Ключ для поддержания консистентности
,,,,,,,,
,,5. Экспорт и интеграции,,,,,,
,,,,,,,,
Column 9,Column 8,ID,Задача,Описание,Зависимости,Приоритет,Шаги реализации,Примечания
FALSE,0,E-1,Экспорт промптов в TXT,"Кнопка «Скачать всё» -> архив с текстовыми файлами (scene1.txt, scene2.txt...)","L-3, A-3",Высокий,"1) Собрать все prompts в массив;
2) Сформировать zip (JSZip, python zipfile);
3) Отдавать пользователю ссылку на скачивание",
FALSE,0,E-2,Экспорт в JSON/CSV,Структурированные форматы для интеграции с другими системами,L-3,Средний,"1) Создать эндпоинт «GET /export?format=json»;
2) Генерировать JSON со сценами, персонажами и промптами;
3) При CSV — своя логика (разделители, escaping)",
FALSE,0,E-3,Экспорт для Premiere/DaVinci (XML),"Формат XML, содержащий таймкоды, описание сцен, возможно — ссылки на сгенерированные изображения","L-3, F-5",Низкий,"1) Определить XML-структуру (например, FCPXML, DaVinci Resolve);
2) Генерировать шаблон с метками <clip><prompt>…","Сложнее, требует знания специфики премьеры/давинчи"
FALSE,0,E-4,Пакетная генерация изображений,Если нужно сразу отправлять prompts в Stable Diffusion API / Midjourney,L-3,Низкий,"1) Собрать все prompts;
2) Параллельные запросы к API SD или MJ;
3) Возвращать ссылки на готовые изображения",Может требовать токены/авторизацию
FALSE,0,E-5,Синхронизация с облачными дисками,Интеграция Google Drive / Dropbox для хранения проектов и экспортов,"A-4, E-1, E-2",Низкий,"1) OAuth авторизация;
2) При нажатии «Сохранить в GDrive» — выгружать zip / json;
3) Хранить рефреш-токены и пути",Для больших проектов и бэкапов
,,,,,,,,
,,6. Безопасность и приватность,,,,,,
,,,,,,,,
Column 9,Column 8,ID,Задача,Описание,Зависимости,Приоритет,Шаги реализации,Примечания
FALSE,0,S-1,Авторизация пользователей (JWT),"Разграничение доступа к проектам. Админ, редактор, гость.",A-3,Средний,"1) Endpoint /login, /register;
2) Хранить пароли в Bcrypt;
3) Генерировать JWT-токен, проверять middleware на всех /api/*",Если нужен мультипользовательский режим
FALSE,0,S-2,HTTPS + SSL/TLS,Защищённое соединение (если проект доступен по сети).,A-3,Высокий,"1) Настроить сертификаты (LetsEncrypt / self-signed);
2) Перенаправлять все HTTP на HTTPS",Обязательно для передачи паролей и данных
FALSE,0,S-3,Шифрование проектов на клиенте (AES-256),"Хранить зашифрованные данные (IndexedDB, локальные файлы)",A-4,Средний,"1) При создании проекта генерировать ключ;
2) Все данные (JSON со сценами, prompts) шифровать перед сохранением;
3) При загрузке — расшифровка","Реализуется сложнее, нужно продумать UX (пароль, потеря ключа = потеря данных)"
FALSE,0,S-4,Экспорт зашифрованных архивов,Возможность выгружать проект в зашифрованный ZIP (пароль),E-1,Низкий,"1) JSZip/pyzip + AES-256 шифрование;
2) Пользователь вводит пароль для архива",
FALSE,0,S-5,История изменений (undo/redo),"Хранить несколько последних изменений в сценах, чтобы восстанавливать предыдущие состояния","F-4, L-2",Средний,"1) При любом изменении делаем снимок состояния в локальном store (Redux, Zustand);
2) Ограничить глубину истории (напр. 50 шагов)",Требует аккуратного менеджмента состояния
,,,,,,,,
,,"7. Производительность, версия LLM и масштабируемость",,,,,,
,,,,,,,,
Column 9,Column 8,ID,Задача,Описание,Зависимости,Приоритет,Шаги реализации,Примечания
FALSE,0,P-1,Поддержка локальной LLM (CPU/GPU),Возможность запускать модели (Llama2 GPTQ / GGUF) на локальной машине,"A-3, L-1",Высокий,"1) Описать инструкции по установке LLM (lmstudio, llama.cpp);
2) Endpoint, где мы вызываем локальный inference;
3) Обработчик больших текстов",
FALSE,0,P-2,Облачный fallback,"Если «железо» не тянет, переключаться на OpenAI API (или другую облачную модель)",P-1,Средний,"1) UI-переключатель: «Использовать локальную / облачную LLM»;
2) Передавать ключи OpenAI при необходимости;
3) Логика роутинга запросов на нужный backend",Могут потребоваться платежные модели
FALSE,0,P-3,Кеширование запросов к LLM,"Не пересчитывать разбивку на сцены каждый раз, если текст не изменился","L-1, L-2",Средний,"1) Хешировать входной текст;
2) Сохранять результаты в БД (или кэш);
3) Если запрос повторяется — возвращать сохранённый результат",Экономит вычислительные ресурсы
FALSE,0,P-4,Оптимизация при большом числе сцен (>50),"Разные режимы отображения: «радиальный», «древовидный» или «минимум UI»","F-3, F-9",Средний,"1) Добавить переключатели видов (Graph vs Tree vs List);
2) Скрывать детали при прокрутке;",Удобно для работы с масштабными сценариями
FALSE,0,P-5,Версионность проектов (Git-like branching),Возможность «ветвить» проект: несколько вариантов сценария,S-5,Низкий,"1) При нажатии «Создать ветку» копировать текущее состояние;
2) Позволять переключаться между ветками;","Сложно в реализации, может быть нужно для больших команд"
,,,,,,,,
,,8. План разработки по этапам (пример),,,,,,
,,,,,,,,
Column 5,Column 4,Этап,Задачи,Результат,,,,
FALSE,0,MVP (Этап 1),"- Создать базовый интерфейс (F-1, F-2, F-3)
- Эндпоинт /split_scenario (L-1)
- Экспорт TXT (E-1)
- Локальная БД/JSON (A-4)","Приложение позволяет загружать текст, получать первичную разбивку на сцены, видеть результат на канве, экспортировать",,,,
FALSE,0,Этап 2,"- Боковая панель редактирования (F-6)
- refine_scene (L-2)
- История изменений (S-5)
- Настройка стиля (L-6)","Можно редактировать сцены, вносить правки, LLM подстраивает структуру, сохраняется история изменений, настраивается стиль",,,,
FALSE,0,Этап 3,"- Таймлиния (F-5), zoom/pan (F-7)
- Промптивизация (L-3)
- Библиотека персонажей (B-1, B-2)","Сцены имеют таймкоды, можно просматривать их на линейке, формировать prompts для генераторов, хранить персонажей и окружения",,,,
FALSE,0,Этап 4,"- Безопасность (S-1, S-2)
- Экспорт в JSON/CSV/XML (E-2, E-3)
- Синхронизация с облаком (E-5)","Расширенная интеграция, шифрование, разные форматы экспорта, возможность хранения/бэкапа проектов",,,,
FALSE,0,Этап 5,"- Пакетная генерация изображений (E-4)
- Проверка консистентности (L-7)
- Механика больших проектов (P-4)","Проект готов к работе с объёмными сценариями, есть удобные режимы отображения, пакетная генерация, предупреждение о противоречиях",,,,
FALSE,0,Финал,"- Документация (video guide, FAQ)
- Тестирование с фокус-группой
- Релиз, обратная связь",Готовый продукт с минимально необходимым набором документации и тестированием на реальных пользователях,,,,
,,,,,,,,
,,,,,,,,
,,,,,,,,
,,,,,,,,
,,,,,,,,
команды,npm run dev,,,,,,,